아래의 함수를 만들고, 해당 함수를 호출하여 확인 하시오.

함수이름: getGrade
1.매개변수: double type 1개
리턴타입: 수 우 미 양 가 중 하나의 char 타입
-------------------------------------------------------------
	public static char getGrade(double avg) {
		
		char grade;
		
		if (avg >= 90) {
			grade = '수';
		} else if (avg >= 80) {
			grade = '우';
		} else if (avg >= 70) {
			grade = '미';
		} else if(avg >= 60) {
			grade = '양';
		} else {
			grade = '가';
		}
		
		return grade;
	}
-------------------------------------------------------------

2.매개변수 하나를 받아 
원의 넓이를 리턴하는 함수를 작성하시오.
-------------------------------------------------------------
public static double getCircleArea(double r) {
		return 3.14*r*r;
	}
-------------------------------------------------------------

3.매개변수 두 개를 받아, 사각형의 넓이를 리턴하는 함수를 
작성하시오.
-------------------------------------------------------------
public static double getRectangleArea(double width, double height) {
		
		return width*height;
	}
-------------------------------------------------------------

4.매개변수 1000을 넣으면 1부터 1000 까지의 합 리턴
-------------------------------------------------------------
	public static int getIncrease(int num) {
		
		int sum = 0;
		
		for(int i = 1; i <= num; i++) {
			sum += i;
		}
		
		return sum;
	}
-------------------------------------------------------------

5.매개변수 int 로 3개 받아서 최대값 리턴
-------------------------------------------------------------
	public static int getMax(int num1, int num2, int num3) {
		
		int max = num1;
		
		if (max < num2) {
			max = num2;
		}
		if (max < num3) {
			max = num3;
		}
		return max;
	}
-------------------------------------------------------------

6. 아래가 의도하지 않은 결과를 나타내는 이유를 설명하시오.


char ch = '가';
System.out.println(ch + '\n'); //44042 라는 int 정수값 출력됨

// 의도를 표현하기 위한 방법
System.out.println(ch + "\n"); //가 출력됨

- int 이하의 타입의 연산은 자동적으로 int로 형 변환이 일어나 연산을 진행한다.
  그래서 '\n'을 하나의 문자형으로 인식해 문자형끼리의 연산이 일어나고 정수형으로 바뀐다.
  정수형으로 바뀌면 해당 문자가 가진 아스키코드값으로 연산을 진행하고 값을 출력한다.

7. 변수의 scope 는?

- 변수는 변수가 선언된 시점부터 그 중괄호 블럭 안에서 사용 가능하다.
- 클래스 밖에서 변수 선언은 불가능함
- 같은 영역 내에서(중괄호 내에서) 동일 이름의 변수 선언 불가

8. 펙토리얼을 구하는 재귀 함수를 만드시오.
-------------------------------------------------------------
	public static int factorial(int num) {
		
		if(num == 1) {
			return 1;
		} else {
			return num * factorial(num-1);
		}
		
	}
-------------------------------------------------------------

9.아래를 함수로 만들어 찍으시오.
printStar(5)

    *
   ***
  *****
 *******
*********
-------------------------------------------------------------
		public static void printStar(int num) {
			for(int i = 1; i <= num; i++) {
				for(int j = num-1; j >= i; j--) {
					System.out.print(" ");
				}
				for(int j = 1; j <= i; j++) {
					System.out.print("*");
				}
				for(int j = 1; j < i; j++) {
					System.out.print("*");
				}
				System.out.println();
			}
		}
-------------------------------------------------------------
10.객체란 무엇인가? 예습
- 객체 : 오브젝트, 인스턴트

11. 아래를 함수로 만들어시오.
getCurrentPaper(126500)

출력:
오만원 : 2장	
만원:    2장
오천원 :1장
천원: 1
오백원: 1개
백원: 0개
-------------------------------------------------------------
	public static void getCurrentPaper(int money) {
		
		int m5 = money/50000;
		int m1 = (money%50000) / 10000;
		int c5 = (money%10000) / 5000;
		int c1 = (money%5000) / 1000;
		int b5 = (money%1000) / 500;
		int b1 = (money%500) / 100;
		
		System.out.println("오만원 : " + m5 + "장");
		System.out.println("만원 : " + m1 + "장");
		System.out.println("오천원 : " + c5 + "장");
		System.out.println("천원 : " + c1 + "장");
		System.out.println("오백원 : " + b5 + "개");
		System.out.println("백원 : " + b1 + "개");
	}
-------------------------------------------------------------

12. 클래스명은 자유롭게 작성하시면 되고
다음과 같은 함수를 만들겁니다.

세 자리의 자연수를 곱하는 과정을 보여주는 함수 "myMultiply"

세 자리의 자연수의 곱은 다음과 같이 이루어집니다. 출력값은 계산과정들을 출력합니다.
    352
×  373
---------
   1056 ---일의자리 출력
  2464  ---십의자리 출력
1056   ---백의자리 출력
----------
131296 ---최종결과 출력


호출방식은 다음과 같습니다.
myMultiply(264,317);

실행결과는 다음과 같습니다.
 1848
 264
792
83688
---------------------------------------------------------------
		public static void main(String[] args) {
			myMultiply(123, 123);

		}
		
		public static void myMultiply(int num1, int num2) {
			System.out.println("  " + num1);
			System.out.println("x " + num2);
			System.out.println("------");
			
			int spot1 = (num2%10)*num1;
			int spot10 = ((num2%100)/10)*num1;
			int spot100 = (num2/100)*num1;
			
			System.out.println("  " + spot1);
			System.out.println(" " + spot10);
			System.out.println(spot100);
			System.out.println("------");
			System.out.println(num1*num2);
			
			
		}
---------------------------------------------------------------
13.아래의 함수를 만드시오.

파라미터로 1000을 넣으면 1부터 1000까지의
숫자중 5의 배수이자 7의 배수인 수를 카운트 하여 리턴
-------------------------------------------------------------
	public static int getCount(int num) {
		int count = 0;
		
		for(int i = 1; i <= num; i++) {
			if ((i % 5 == 0)&&(i % 7 == 0)) {
				count += 1;
			}
		}
		
		return count;
	}
-------------------------------------------------------------

14.아래의 함수를 만드시오.

getGugudan(3) // 3단 출력
getGugudan(5) // 5단 출력
getGugudan(6) // 6단 출력
getGugudan(7) // 7단 출력
-------------------------------------------------------------
public static void getGugudan(int num) {
		
		for(int i = num; i <= num; i++) {
			for(int j = 1; j <= 9; j++) {
				System.out.println(i + " * "+ j + " = " + i*j );
			}
		}
	}
-------------------------------------------------------------