1.인스턴스 변수란?
- main함수가 없는 클래스내에 선언한 변수

2. 지역 변수란?
- 함수내용(중괄호 안)속에서만 처리되는 변수

3. 클래스의 구성 요소는?
- 인스턴스 변수, 함수, 지역변수

4.원의 넓이는 구하는 프로그램**을 아래와 같이 작성하시오.

- 원 클래스를 만들 것
- 메인 메소드를 가진 다른 클래스에서 원 객체를 생성할 것
--------------------------------------------------------------------------
public class Circle {
	
	private double r; 
	
	
	public void setR(double radius) { 
		r = radius;
	}
	
	public double getArea() { 
		return Math.PI * r * r;
	}
--------------------------------------------------------------------------
public class AreaTest {

	public static void main(String[] args) {
		
		Circle circle = new Circle(); //4byte
		circle.setR(10);  
		circle.getArea();
		
		System.out.println("원 넓이는 " + circle.getArea()); 
	}
--------------------------------------------------------------------------

5.사각형의 넓이를 구하는 프로그램

- 사각형 클래스를 만들 것
- 메인 메소드를 가진 다른 클래스에서 원 객체를 생성할 것
--------------------------------------------------------------------------
class Rectangle {
	private int width;
	private int height;
	
	public void setWidth(int width) { 
		this.width = width;
	} 
	
	public void setHeight(int height) {
		this.height = height;
	}
	
	public int getArea() {
		return width * height;
	}
	
}
--------------------------------------------------------------------------
public class AreaTest {

	public static void main(String[] args) {
		
		Rectangle rectangle = new Rectangle();
		rectangle.setWidth(10); 
		rectangle.setHeight(10); 
		
		System.out.println("사각형 넓이는 " + rectangle.getArea()); 		
	}

}
--------------------------------------------------------------------------

6.성적표 구하는 프로그램을 만드시오.
- Grade 클래스 
- 국영수 인스턴스 변수(각각의 setter getter 함수)
-getToal ,getAvg()
- 메인 메소드를 가진 다른 클래스에서 Grade 객체 
--------------------------------------------------------------------------
public class Grade {
	private int kor, eng, math;
	private double total, avg;
	
	
	public void setKor(int kor) {
		this.kor = kor;		
	}
	public void setEng(int eng) {
		this.eng = eng;
	}
	public void setMath(int math) {
		this.math = math;
	}
	
	public double getTotal() {
		this.total = (kor+eng+math);
		return total;
	}
	public double getAvg() {
		this.avg = (total/3.0);
		return avg;
	}
--------------------------------------------------------------------------
	public static void main(String[] args) {
		Grade grade = new Grade();
		
		grade.setKor(80);
		grade.setEng(70);
		grade.setMath(90);
		
		System.out.println("총점 : " + grade.getTotal());
		System.out.println("평균 : " + grade.getAvg());
		

	}
--------------------------------------------------------------------------
7. 객체란 무엇인가?
- 자유롭게 끌어다 쓰기위해 만들어놓은 메소드
- 

8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
Rectangle r = new Rectangle(); 
public class Rectangle {
int height;
int width;

public int getHeight() {
	return height;
}

public void setHeight(int height) {
	this.height = height;
}

public int getWidth() {
	return width;
}

public void setWidth(int width) {
	this.width = width;
}

public int getArea() {
	return width * height;
}
--------------------------------------------------------------------------

노트에 그려놓음

--------------------------------------------------------------------------
9. 클래스와 객체의 차이는?
- 클래스는 실행시킬 함수를 저장한 파일.
- 객체를 생성한다는 것은 해당 클래스의 .class 파일을 메모리에 올린다는 것을 의미한다.

10. 아래의 프로그램을 작성하시오.

- 1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.

1) 합을 구할 수 있는 GetSum클래스를 통해 getsum 객체를 생성
2) num 까지의 합을 구해야 하므로 num값이 변할 수 있도록 num 변수를 선언
예를 들어서 50까지의 합을 구하기 위해 num변수에  50을 대입
3) getsum객체의 setNum함수를 이용해  num(여기서는 50)값 저장
4) getsum객체의 sum함수를 이용해 1부터 50(num)까지의 값을 구함
--------------------------------------------------------------------------
public class GetSum {
	private int num, sum;
	
	public void setNum(int num) {
		this.num = num;
	}
	public int getSum() {
		sum = 0;
		
		for(int i = 1; i <= num; i++) {
			sum += i;
		}
		
		return sum;
	}
--------------------------------------------------------------------------
public class ProgramTest {

	public static void main(String[] args) {
		GetSum getsum = new GetSum();
		
		getsum.setNum(5);
		
		System.out.println("총합 : " + getsum.getSum());

	}
--------------------------------------------------------------------------
11. 아래의 클래스를 작성하시오.

StarPrint strPrint = new StarPrint();

strPrint.printTriangle(3); 
System.out.println();
strPrint.printReverseTriangle(3); 

*
**
***

***
**
*
--------------------------------------------------------------------------
public class StarPrint {
	private int num;
	
	public void printTriangle(int num) {
		this.num = num;
		
		for(int i = 1; i <= num; i++) {
			for(int j = 1; j <= i; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public void printReverseTriangle(int num) {
		this.num = num;
		
		for(int i = 1; i <= num; i++) {
			for(int j = num; j >= i; j--) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
--------------------------------------------------------------------------
	public static void main(String[] args) {
		StarPrint strPrint = new StarPrint();
		
		strPrint.printTriangle(5);
		strPrint.printReverseTriangle(5);
	}
--------------------------------------------------------------------------
12. 아래의 프로그래밍을 작성하시오.

Gugudan gugudan = new Gugudan();
gugudan.printGugu(10);  //1단부터 10단까지 출력
gugudan.printGugu(20);  //1단부터 20단까지 출력
--------------------------------------------------------------------------
public class Gugudan {
	int num;
	
	public void printGugu(int num) {
		for(int i = 1; i <= num; i++) {
			for(int j = 1; j <= 9; j++) {
				System.out.println(i + " * " + j + " = " + i*j);
			}
		}
	}
--------------------------------------------------------------------------
	public static void main(String[] args) {
		Gugudan gugudan = new Gugudan();
		
		gugudan.printGugu(10);
		gugudan.printGugu(20);
	}
--------------------------------------------------------------------------
