1. 상속을 UML로 표기해 보세요.
 - 
	class Man{
		. . .
	}
	class BusinessMan extends Man{
		. . .
	}

>>> UML :	Man
		 ↑
	        BusinessMan		

2. 부모 클래스와 자식 클래스의 다른 용어들은?
- 부모 클래스 : 상위 클래스, 기초 클래스
- 자식 클래스 : 하위 클래스, 유도 클래스

3. super 키워드와 this 키워드의 차이는 무엇인가요?
 - super는 접근 제한자 private이 선언되어 있을경우에 해당 변수에 접근하기 위해 사용.
 - this는 접근 제한자 private이 선언되어있지 않을 경우에 해당 변수에 접근하기 위해 사용.

4. 단일 상속과 다중 상속 이란?
 - 단일 상속: 하나의 클래스만 상속
 - 다중 상속: 여러개의 클래스를 상속, 자바에서는 지원하지 않음

5. 다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.


String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};

/*
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라. "그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)

과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만
*/

[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.

String name;
	if(course[i].equals(name)) {
	int n = score[i];
	...
}
------------------------------------------------------------------------------
import java.util.Scanner;

class GradeArray{
	private String[] course = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
	private int[] score = {95, 88, 76, 62, 55};
	private String lecture;
	private boolean bool;
	
	public GradeArray() {
		this.lecture = "";
		this.bool = true;
	}
	
	private void input() {
		Scanner sc = new Scanner(System.in);
		System.out.print("과목 이름 >> ");
		this.lecture = sc.nextLine();
		
		if(lecture.equals("그만")) bool = false;
		else bool = true;
	}
	
	private void getGrade() {
		int i = 0;
		
		for(i = 0; i < course.length; i++) {
		
			if(lecture.equals(course[i])) {
				System.out.println(course[i] + "의 점수는 " + score[i]);
				break;
			} 
		}
		if(i == course.length) System.out.println("없는 과목입니다.");
	}
	
	public void show() {
		while(bool) {
			input();
			if(bool) getGrade();
		}
	}
}

public class GradeArrayTest {

	public static void main(String[] args) {
		GradeArray ga = new GradeArray();
		ga.show();

	}

}
------------------------------------------------------------------------------

6. 다음은 2차원 상의 한 점을 표현하는 Point 클래스이다. 
Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

```java
class Point {
	private int x, y;
	public Point(int x, int y) { this.x = x; this.y = y; }
	public int getX() { return x; }
	public int getY() { return y; }
	protected void move(int x, int y) { this.x =x; this.y = y; }

public static void main(String[] args) {
	ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
	cp.setXY(10, 20);
	cp.setColor("RED");
	String str = cp.toString();
	System.out.println(str+"입니다. ");
}

/*
=======================
RED색의 (10,20)의 점입니다.
*/
```
------------------------------------------------------------------------------
class Point{
	private int x, y;
	
	public Point() {}
	
	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}
	
	public int getX() {
		return x;
	}
	
	public int getY() {
		return y;
	}
	
	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

class ColorPoint extends Point{
	private String color;
	
	public ColorPoint(int x, int y, String color) {
		super(x,y);
		this.color = color;
	}
	
	public void setXY(int x, int y) {
		super.move(x, y);
	}
	
	public void setColor(String str) {
		this.color = str;
	}
	
	public String toString() {
		return color + "색의 " + "(" + super.getX() + "," + super.getY() + ")의 점"; 
	}
}

public class ColorTest {

	public static void main(String[] args) {
		ColorPoint cp = new ColorPoint(5,5,"Yellow");
		cp.setXY(10, 20);
		cp.setColor("RED");
		String str = cp.toString();
		System.out.println(str + "입니다.");
		
		
		
	}

}
------------------------------------------------------------------------------

7. Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

```java
public static void main(String[] args) {
	ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
	System.out.println(zeroPoint.toString() + "입니다.");
	ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
	cp.setXY(5,5);
	cp.setColor("RED");
	System.out.println(cp.toString()+"입니다.");
}

/*
=======================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.
*/
```
------------------------------------------------------------------------------
class Point{
	private int x, y;
	
	public Point() {}
	
	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}
	
	public int getX() {
		return x;
	}
	
	public int getY() {
		return y;
	}
	
	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

class ColorPoint extends Point{
	private String color;
	
	public ColorPoint() {
		super(0,0);
		color = "BLACK";
	}
	public ColorPoint(int x, int y) {
		super(x,y);
	}
	

	public void setXY(int x, int y) {
		super.move(x, y);
	}
	
	public void setColor(String str) {
		this.color = str;
	}
	
	public String toString() {
		return color + "색의 " + "(" + super.getX() + "," + super.getY() + ")의 점"; 
	}
}

public class ColorTest {

	public static void main(String[] args) {
		ColorPoint zeroPoint = new ColorPoint();
		System.out.println(zeroPoint.toString());
		
		ColorPoint cp = new ColorPoint(10,10);
		cp.setXY(5, 5);
		cp.setColor("RED");
		System.out.println(cp.toString() + "입니다.");

		
		
	}

}
------------------------------------------------------------------------------
8. Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

```java
public static void main(String[] args) {
	Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
	System.out.println(p.toString()+"입니다.");
	p.moveUp(); // z 축으로 위쪽 이동
	System.out.println(p.toString()+"입니다.");
	p.moveDown(); // z 축으로 아래쪽 이동
	p.move(10, 10); // x, y 축으로 이동
	System.out.println(p.toString()+"입니다.");
	p.move(100,  200, 300); // x, y, z축으로 이동
	System.out.println(p.toString()+"입니다.");
}

/*
=======================
(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.
*/
```
------------------------------------------------------------------------------
class Point3D extends Point{
	private int z = 0;
	
	public Point3D(int x, int y, int z) {
		super(x, y);
		this.z = z;
	}
	
	public void moveUp() {
		z++;
	}
	
	public void moveDown() {
		z--;
	}
	
	private int getZ() {
		return z;
	}
	
	public void move(int x, int y) {
		super.move(x, y);
	}
	
	public void move(int x, int y, int z) {
		super.move(x, y);
		this.z = z;
	}
	
	public String toString() {
		return "(" + super.getX() + "," + super.getY() + "," + getZ() + ") 의 점";
	}
}

------------------------------------------------------------------------------

10.다음 TV 클래스가 있다.

class TV{
   private int size;
   public TV(int size) { this.size = size; }
   protected int getSize() { return size; }
}

[1번] 다음 main() 메소드와 실행 결과를 참고하여 TV를 상속받은 ColorTV 클래스를 작성하라.

public static void main(String[] args) {
   ColorTV myTV = new ColorTV(32, 1024);
   myTV.printProperty();
}
/*
===========
32인치 1024컬러
*/
------------------------------------------------------------------------------
class TV{
	private int size;
	
	public TV(int size) {
		this.size = size;
	}
	
	protected int getSize() {
		return size;
	}
}

class ColorTV extends TV{
	private int color;
	
	public ColorTV(int size, int color) {
		super(size);
		this.color = color;
	}

	public int getColor() {
		return color;
	}
	
	public void printProperty() {
		System.out.println(super.getSize() + "인치 " + color + "컬러");
	}
}

public class TvTest {

	public static void main(String[] args) {
		ColorTV myTV = new ColorTV(32, 1024);
		myTV.printProperty();
	}

}
------------------------------------------------------------------------------
11. 다음 main() 메소드와 실행 결과를 참고하여 ColorTV를 상속받는 IPTV 클래스를 작성하라.

public static void main(String[] args) {
   IPTV iptv = new IPTV("192.1.1.2", 32, 2048); //"192.1.1.2" 주소에 32인치, 2048컬러
   iptv.printProperty();
}
/*
=============================================
나의 IPTV는 192.1.1.2 주소의 32인치 2048컬러
*/
------------------------------------------------------------------------------
class IPTV extends ColorTV{
	private String ip;
	
	public IPTV(String ip, int size, int color) {
		super(size, color);
		this.ip = ip;
	}
	
	public void printProperty() {
		System.out.println("나의 IPTV는 " + ip + "주소의 " + getSize() + "인치 " + super.getColor() + "컬러");
	}
}

public class TvTest {

	public static void main(String[] args) {
		/*ColorTV myTV = new ColorTV(32, 1024);
		myTV.printProperty();*/
		
		IPTV iptv = new IPTV("192.1.1.2", 32, 2048);
		iptv.printProperty();
	}

}
------------------------------------------------------------------------------